// Mocks generated by Mockito 5.4.5 from annotations
// in sbb_oidc/test/app_auth_oidc_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:convert' as _i4;
import 'dart:typed_data' as _i6;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:sbb_oidc/sbb_oidc.dart' as _i7;
import 'package:sbb_oidc/src/token_store.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  @override
  _i3.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response>);

  @override
  _i3.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<_i6.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i3.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
            returnValueForMissingStub: _i3.Future<_i6.Uint8List>.value(
              _i6.Uint8List(0),
            ),
          )
          as _i3.Future<_i6.Uint8List>);

  @override
  _i3.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i3.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i3.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [OidcToken].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockOidcToken extends _i1.Mock implements _i7.OidcToken {
  @override
  String get tokenType =>
      (super.noSuchMethod(
            Invocation.getter(#tokenType),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#tokenType),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#tokenType),
            ),
          )
          as String);

  @override
  String get accessToken =>
      (super.noSuchMethod(
            Invocation.getter(#accessToken),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#accessToken),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#accessToken),
            ),
          )
          as String);

  @override
  String get idToken =>
      (super.noSuchMethod(
            Invocation.getter(#idToken),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#idToken),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#idToken),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String toJsonString({bool? pretty = false}) =>
      (super.noSuchMethod(
            Invocation.method(#toJsonString, [], {#pretty: pretty}),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.method(#toJsonString, [], {#pretty: pretty}),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.method(#toJsonString, [], {#pretty: pretty}),
            ),
          )
          as String);
}

/// A class which mocks [OpenIDProviderMetadata].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockOpenIDProviderMetadata extends _i1.Mock
    implements _i7.OpenIDProviderMetadata {
  @override
  String get authorizationEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#authorizationEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#authorizationEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#authorizationEndpoint),
            ),
          )
          as String);

  @override
  List<String> get claimsSupported =>
      (super.noSuchMethod(
            Invocation.getter(#claimsSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  String get cloudGraphHostName =>
      (super.noSuchMethod(
            Invocation.getter(#cloudGraphHostName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#cloudGraphHostName),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#cloudGraphHostName),
            ),
          )
          as String);

  @override
  String get cloudInstanceName =>
      (super.noSuchMethod(
            Invocation.getter(#cloudInstanceName),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#cloudInstanceName),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#cloudInstanceName),
            ),
          )
          as String);

  @override
  String get deviceAuthorizationEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#deviceAuthorizationEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#deviceAuthorizationEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#deviceAuthorizationEndpoint),
            ),
          )
          as String);

  @override
  String get endSessionEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#endSessionEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#endSessionEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#endSessionEndpoint),
            ),
          )
          as String);

  @override
  bool get frontchannelLogoutSupported =>
      (super.noSuchMethod(
            Invocation.getter(#frontchannelLogoutSupported),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get httpLogoutSupported =>
      (super.noSuchMethod(
            Invocation.getter(#httpLogoutSupported),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  List<String> get idTokenSigningAlgValuesSupported =>
      (super.noSuchMethod(
            Invocation.getter(#idTokenSigningAlgValuesSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  String get issuer =>
      (super.noSuchMethod(
            Invocation.getter(#issuer),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#issuer),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#issuer),
            ),
          )
          as String);

  @override
  String get jwksUri =>
      (super.noSuchMethod(
            Invocation.getter(#jwksUri),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#jwksUri),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#jwksUri),
            ),
          )
          as String);

  @override
  String get kerberosEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#kerberosEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#kerberosEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#kerberosEndpoint),
            ),
          )
          as String);

  @override
  String get msgraphHost =>
      (super.noSuchMethod(
            Invocation.getter(#msgraphHost),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#msgraphHost),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#msgraphHost),
            ),
          )
          as String);

  @override
  String get rbacUrl =>
      (super.noSuchMethod(
            Invocation.getter(#rbacUrl),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#rbacUrl),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#rbacUrl),
            ),
          )
          as String);

  @override
  bool get requestUriParameterSupported =>
      (super.noSuchMethod(
            Invocation.getter(#requestUriParameterSupported),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  List<String> get responseModesSupported =>
      (super.noSuchMethod(
            Invocation.getter(#responseModesSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  List<String> get responseTypesSupported =>
      (super.noSuchMethod(
            Invocation.getter(#responseTypesSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  List<String> get scopesSupported =>
      (super.noSuchMethod(
            Invocation.getter(#scopesSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  List<String> get subjectTypesSupported =>
      (super.noSuchMethod(
            Invocation.getter(#subjectTypesSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  String get tokenEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#tokenEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#tokenEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#tokenEndpoint),
            ),
          )
          as String);

  @override
  List<String> get tokenEndpointAuthMethodsSupported =>
      (super.noSuchMethod(
            Invocation.getter(#tokenEndpointAuthMethodsSupported),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  String get userinfoEndpoint =>
      (super.noSuchMethod(
            Invocation.getter(#userinfoEndpoint),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#userinfoEndpoint),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.getter(#userinfoEndpoint),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String toJsonString({bool? pretty = false}) =>
      (super.noSuchMethod(
            Invocation.method(#toJsonString, [], {#pretty: pretty}),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.method(#toJsonString, [], {#pretty: pretty}),
            ),
            returnValueForMissingStub: _i5.dummyValue<String>(
              this,
              Invocation.method(#toJsonString, [], {#pretty: pretty}),
            ),
          )
          as String);
}

/// A class which mocks [TokenStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenStore extends _i1.Mock implements _i8.TokenStore {
  @override
  _i3.Future<_i7.OidcToken?> read(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#read, [key]),
            returnValue: _i3.Future<_i7.OidcToken?>.value(),
            returnValueForMissingStub: _i3.Future<_i7.OidcToken?>.value(),
          )
          as _i3.Future<_i7.OidcToken?>);

  @override
  _i3.Future<Map<String, _i7.OidcToken>> readAll() =>
      (super.noSuchMethod(
            Invocation.method(#readAll, []),
            returnValue: _i3.Future<Map<String, _i7.OidcToken>>.value(
              <String, _i7.OidcToken>{},
            ),
            returnValueForMissingStub:
                _i3.Future<Map<String, _i7.OidcToken>>.value(
                  <String, _i7.OidcToken>{},
                ),
          )
          as _i3.Future<Map<String, _i7.OidcToken>>);

  @override
  _i3.Future<void> write(String? key, _i7.OidcToken? oidcToken) =>
      (super.noSuchMethod(
            Invocation.method(#write, [key, oidcToken]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
